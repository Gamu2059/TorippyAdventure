//////////////////////////////////////////////////////////////////////////////
// ***** motionArithmetic *****
//
// 定義しているもの
// ・衝突判定用関数。
// ・最短にある障害物の座標を求める関数。
// ・位置修正用関数。
// ・ジャンプ演算関数。
// 備考
// ・特になし
//////////////////////////////////////////////////////////////////////////////
#include "define.h"

// char confirmCrash(SD*,PD*)
// ・キャラクタとステージが衝突していないかを確認するための関数です。
// ・引数
//     sd：ステージのタグアドレスを指定します。
//     pd：キャラクタのタグアドレスを指定します。
// ・戻り値
//     衝突判定結果
extern char confirmCrash(SD* sd,PD* pd);

// void getWallLine(SD*,PD*)
// ・キャラクタが衝突するであろう障害物の、その距離を求めるための関数です。
// ・引数
//     sd：ステージのタグアドレスを指定します。
//     pd：キャラクタのタグアドレスを指定します。
// ・戻り値
//     なし
extern void getWallLine(SD* sd,PD* pd);

// void modifyCrash(SD*,PD*)
// ・キャラクタの位置を修正するための関数です。
// ・引数
//     sd：ステージのタグアドレスを指定します。
//     pd：キャラクタのタグアドレスを指定します。
// ・戻り値
//     なし
extern void modifyCrash(SD* sd,PD* pd);

// void jump(SD*,PD*,char)
// ・キャラクタのジャンプ情報を取得するための関数です。
// ・引数
//     sd：ステージのタグアドレスを指定します。
//     pd：キャラクタのタグアドレスを指定します。
//     operand：プレイヤーか敵キャラクタかを指定します。
//              TRUEならプレイヤー、FALSEなら敵キャラクタを指定します。
// ・戻り値
//     なし
extern void jump(SD* sd,PD *pd,char operand);

// scrollDisplay(SD*,PD*)
// ・ステージのスクロールを計算ための関数です。
// ・引数
//     sd：ステージのタグアドレスを指定します。
//     pd：プレイヤーのタグアドレスを指定します。
// ・戻り値
//     なし
extern void scrollDisplay(SD* sd,PD* pd);

// void moveArithmetic(SD*,PD*,int,char)
// ・キャラクタの移動量の計算および位置修正のための関数です。
// ・引数
//     sd：ステージのタグアドレスを指定します。
//     pd：キャラクタのタグアドレスを指定します。
//     direction：移動する向きを指定します。
//                1なら右向き、-1なら左向きを指定します。
//     operand：プレイヤーか敵キャラクタかを指定します。
//              TRUEならプレイヤー、FALSEなら敵キャラクタを指定します。
// ・戻り値
//     なし
extern void moveArithmetic(SD* sd,PD* pd,int direction,char operand);

